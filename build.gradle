plugins {
  id "kz.greetgo.upload-to-maven" version "0.0.5"
  id "kz.greetgo.upload-to-gg-repo" version "0.0.5"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'kz.greetgo'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
version = '0.5.0'

repositories {
  mavenLocal()
  if (System.getenv('GG_REPO')?.trim()) maven { url System.getenv('GG_REPO').trim() }
  mavenCentral()
}

dependencies {
  ext.greetgoConfVersion = '0.0.12'
  ext.greetgoUtilVersion = '0.1.1'
  ext.greetgoClassScannerVersion = '2.0.0'

  testCompile 'org.testng:testng:6.14.3'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
  testCompile 'org.apache.derby:derby:10.12.1.1'
}


tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
  options.addStringOption('encoding', 'UTF-8')
  options.addStringOption('charSet', 'UTF-8')
}

test.useTestNG()

idea.module.downloadSources = true
idea.module.downloadJavadoc = true
idea.module.inheritOutputDirs = false
idea.module.outputDir = file("$buildDir/classes/main/")
idea.module.testOutputDir = file("$buildDir/classes/test/")

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

sourceSets.main.java.srcDirs = ["src"]
sourceSets.test.java.srcDirs = ["test_src"]
sourceSets.main.resources.srcDirs = ["src_resources"]
sourceSets.test.resources.srcDirs = ["test_resources"]

sourceSets.main.resources {
  srcDirs += sourceSets.main.java.srcDirs
  exclude '**/*.java'
}
sourceSets.test.resources {
  srcDirs += sourceSets.test.java.srcDirs
  exclude '**/*.java'
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name
    attributes 'Implementation-Version': archiveVersion
    attributes 'Implementation-Vendor': "greetgo!"
    attributes 'Created-By': System.getProperty("user.name")
    //attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
  }
}

uploadToMavenCentral {
  description = "greetgo library to generate or parse MS Office files"
  url = 'https://github.com/greetgo/greetgo.msoffice'
  scm.url = 'git@github.com:greetgo/greetgo.msoffice.git'
  developer {
    id = 'pompei'
    name = 'Evgeniy Kolpakov'
    email = 'ekolpakov@greet-go.com'
  }
}
